{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template for provisioning new Environemnt for testing the code base",
  

  "Parameters" : {


    "DBName": {
      "Default": "test",
      "Description" : "Database name for TestRails RDS",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

     "DBUser": {
      "NoEcho": "true",
      "Default": "jpdave",
      "Description" : "Admin username for the TestRails Database",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Description" : "Admin password for the TestRails Database",
      "Default": "qwe123asd",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]+",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "DBAllocatedStorage": {
      "Default": "20",
      "Description" : "RDS Database Storage (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "1024",
      "ConstraintDescription" : "must be between 5 and 1024Gb."
    },

    "DBInstanceClass": {
      "Description" : "RDS MySQL instance type",
      "Type": "String",
      "Default": "db.t2.small",
      "AllowedValues" : [ "db.t2.micro", "db.m1.small", "db.m1.medium", "db.m1.large", "db.m1.xlarge", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge", "db.m4.large", "db.m4.xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.10xlarge", "db.r3.large", "db.r3.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.cr1.8xlarge", "db.t2.micro", "db.t2.small", "db.t2.medium", "db.t2.large"]
,
      "ConstraintDescription" : "must select a valid database instance type."
    },

    "EC2InstanceType" : {
      "Description" : "EC2 instance type for Manage Servers",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [  "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
   
"BillingCode": {
      "Default": "test",
      "Description" : "Enter the BillingCode to be used for Cost Governance",
      "Type": "String",
      "ConstraintDescription" : "Enter key for BillingCode tag"
    },
    "Env": {
      "Default": "test",
      "Description" : "Enter the Environment tag to segregate stack across different environments",
      "Type": "String",
      "ConstraintDescription" : "Enter key for Environment tag"
    }
  
    
},


  "Resources" : {
    
        
       
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : "10.10.0.0/16",
        "Tags" : [

          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : "Dev-VPC" }
          ]
      }
    },

  
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "Dev-VPC-IGW" },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}}
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : "Dev-VPC-Public-route" }
        ]
      }
    },
    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : "Dev-VPC-Public-route" }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "MapPublicIpOnLaunch" : "True",
        "AvailabilityZone" : "ap-southeast-1b",
        "CidrBlock" : "10.10.1.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : "Dev-VPC-Public-1" }
        ]
      }
    },

    "PublicSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "MapPublicIpOnLaunch" : "True",
        "AvailabilityZone" : "ap-southeast-1a",
        "CidrBlock" : "10.10.2.0/24",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : "Dev-VPC-Public-2" }
        ]
      }
    },


    "PublicSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },





    "PrivateSubnetApp1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "ap-southeast-1b",
        "CidrBlock" : "10.10.11.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : "Dev-VPC-Private-App-1" }
        ]
      }
    },
    "PrivateSubnetApp2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "ap-southeast-1a",
        "CidrBlock" : "10.10.12.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : "Dev-VPC-Private-App-2" }
        ]
      }
    },


    "PrivateSubnetRouteTableApp1Association" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetApp1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSubnetRouteTableApp2Association" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetApp2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

   

    
    


  

    


  },

  "Outputs" : {
   
    }
  
}