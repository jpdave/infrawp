{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template for provisioning new Environemnt for testing the code base",
  

  "Parameters" : {


    "DBSnapshotIdentifier": {
      "Default": "test",
      "Description" : "Database name for RDS",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

     "DBUser": {
      "NoEcho": "true",
      "Default": "jpdave",
      "Description" : "Admin username for the Database",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Description" : "Admin password for the Database",
      "Default": "qwe123asd",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]+",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "DBAllocatedStorage": {
      "Default": "20",
      "Description" : "RDS Database Storage (Gb)",
      "Type": "Number",
      "MinValue": "20",
      "MaxValue": "1024",
      "ConstraintDescription" : "must be between 20 and 1024Gb."
    },

    "DBInstanceClass": {
      "Description" : "RDS MySQL instance type",
      "Type": "String",
      "Default": "db.t2.small",
      "AllowedValues" : [ "db.t2.micro", "db.m1.small", "db.m1.medium", "db.m1.large", "db.m1.xlarge", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge", "db.m4.large", "db.m4.xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.10xlarge", "db.r3.large", "db.r3.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.cr1.8xlarge", "db.t2.micro", "db.t2.small", "db.t2.medium", "db.t2.large"]
,
      "ConstraintDescription" : "must select a valid database instance type."
    },

    "EC2InstanceType" : {
      "Description" : "EC2 instance type for Manage Servers",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [  "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
   
"BillingCode": {
      "Default": "test",
      "Description" : "Enter the BillingCode to be used for Cost Governance",
      "Type": "String",
      "ConstraintDescription" : "Enter key for BillingCode tag"
    },
    "Env": {
      "Default": "test",
      "Description" : "Enter the Environment tag to segregate stack across different environments",
      "Type": "String",
      "ConstraintDescription" : "Enter key for Environment tag"
    }
  
    
},


  "Resources" : {
    
        
       
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : "10.10.0.0/16",
        "Tags" : [

          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC"]]}  }
          ]
      }
    },

  
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-IGW"]]} },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}}
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Public-route"]]} }
        ]
      }
    },
    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" :{"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Public-route"]]}  }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "MapPublicIpOnLaunch" : "True",
        "AvailabilityZone" : "ap-southeast-1b",
        "CidrBlock" : "10.10.1.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Public-1"]]} }
        ]
      }
    },

    "PublicSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "MapPublicIpOnLaunch" : "True",
        "AvailabilityZone" : "ap-southeast-1a",
        "CidrBlock" : "10.10.2.0/24",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Public-2"]]} }
        ]
      }
    },


    "PublicSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },





    "PrivateSubnetApp1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "ap-southeast-1b",
        "CidrBlock" : "10.10.11.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Private-App-1"]]}  }
        ]
      }
    },
    "PrivateSubnetApp2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "ap-southeast-1a",
        "CidrBlock" : "10.10.12.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Private-App-2"]]} }
        ]
      }
    },


    "PrivateSubnetRouteTableApp1Association" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetApp1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSubnetRouteTableApp2Association" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetApp2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSubnetDB1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "ap-southeast-1b",
        "CidrBlock" : "10.10.21.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Private-db-1"]]}  }
        ]
      }
    },
    "PrivateSubnetDB2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "ap-southeast-1a",
        "CidrBlock" : "10.10.22.0/24" ,
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-Private-db-2"]]} }
        ]
      }
    },


    "PrivateSubnetRouteTableDB1Association" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetDB1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSubnetRouteTableDB2Association" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetDB2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "DBSubnetGroup" : {
       "Type" : "AWS::RDS::DBSubnetGroup",
       "Properties" : {
          "DBSubnetGroupDescription" : "description",
          "SubnetIds" : [ {"Ref": "PrivateSubnetDB1"}, {"Ref": "PrivateSubnetDB2"}  ],
          "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "VPC-RDS-Subnet-Group"]]} },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}} ]
       }
    },
    "RDSDBParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties" : {
        "Description" : "Parameter group for RDS Mysql",
        "Family" : "mysql5.6",
        
      }
    },

    "SecurityGroupRDS" :{
      "Type" : "AWS::EC2::SecurityGroup",
  "Properties" : {
     "GroupDescription" : "ketto-dev-RDS-SG",
     "SecurityGroupIngress" : [ { 
          "IpProtocol" : "tcp",
          "FromPort" : "3306",  
          "ToPort" : "3306",
          "CidrIp" : "10.10.0.0/16"
        }
         ],
     "Tags" :  [ 
     { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
     { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "RDS-SG"]]} } 
          ],
     "VpcId" : { "Ref": "VPC"}
      }
    },

    "RDSMysql1" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "DBSnapshotIdentifier" :  { "Ref" : "DBSnapshotIdentifier" },
        "AllocatedStorage" : { "Ref" : "DBAllocatedStorage" },
        "DBInstanceClass" : { "Ref" : "DBInstanceClass" },
        "DBInstanceIdentifier": {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "app"]]},
        "Engine" : "MySQL",
        "MasterUsername" : {"Ref" : "DBUser"},
        "DBSubnetGroupName" : {"Ref" : "DBSubnetGroup"},
        "MasterUserPassword" : {"Ref" : "DBPassword"},
        "MultiAZ" : "False",
        "DBParameterGroupName" : {"Ref" : "RDSDBParameterGroup"},
        "PubliclyAccessible" : "False",
        "Tags" : [{ "Key"  : "Name", "Value" : "dev-vpc-rds" },
        { "Key" : "Env", "Value" : {"Ref" : "Env"} },
        {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}}],
        "VPCSecurityGroups": [{"Ref" : "SecurityGroupRDS"}]
        
      },
      "DeletionPolicy" : "Delete"
    },

    "SecurityGroupApp": {
  "Type" : "AWS::EC2::SecurityGroup",
  "Properties" : {
     "GroupDescription" : "app security groups",
     "SecurityGroupIngress" : [ 

         { 
          "IpProtocol" : "TCP",
          "FromPort" : "80",  
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        },
        { 
          "IpProtocol" : "-1",
          "FromPort" : "0",  
          "ToPort" : "65535",
          "CidrIp" : "13.250.103.171/32"
        }
        
         ],
     "Tags" :  [ 
     { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Env", "Value" : {"Ref" : "Env"} },
          {"Key" : "BillingCode", "Value" : {"Ref" : "BillingCode"}},
          { "Key" : "Name", "Value" : {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "app-sg"]]} } ],
     "VpcId" : { "Ref": "VPC"}
  }
},


"AppEc2Server1": {
    "Type": "AWS::EC2::Instance",
    "DependsOn": "RDSMysql1",
    
    "Properties": {
      "InstanceType": {"Ref" : "EC2InstanceType"},
      "KeyName": "elktest",

      "ImageId": "ami-0183e3460f448edd1",
      "SourceDestCheck": "True",
      "Tags": [{
        "Key": "Name",
        "Value": {"Fn::Join" : [ "-", [{"Ref" : "Env"}, "App-server"]]} 
      }, {
        "Key": "Env",
        "Value": {
          "Ref": "Env"
        }
      }, {
        "Key": "BillingCode",
        "Value": {
          "Ref": "BillingCode"
        }
      }],
      "NetworkInterfaces": [{
      "GroupSet"                 : [{ "Ref" : "SecurityGroupApp" }],
      "AssociatePublicIpAddress": "True",
      "DeviceIndex": "0",
      "DeleteOnTermination": "true",
      "SubnetId": {
        "Ref": "PublicSubnet1"
      }

    }]
    }
  }

    


  },

  "Outputs" : {
   
    "PublicIp" : {
      "Value" : { "Fn::GetAtt" : [ "AppEc2Server1", "PublicIp" ]},
      "Description" : "Server's PublicIp Address"
    },
    "VPCId" : {
      "Value" : { "Fn::GetAtt" : [ "PublicSubnet1", "VpcId" ]},
      "Description" : "Server's PublicIp Address"
    },

    "RDSEndPoint":{
      "Value" : { "Fn::GetAtt" : [ "RDSMysql1", "Endpoint.Address" ]},
      "Description" : "rds endpoint"
    }

    }
  
}
